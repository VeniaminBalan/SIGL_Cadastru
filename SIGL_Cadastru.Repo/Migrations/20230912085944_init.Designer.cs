// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SIGL_Cadastru.Repo.DataBase;

#nullable disable

namespace SIGL_Cadastru.Repo.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230912085944_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.8");

            modelBuilder.Entity("Models.CerereStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CerereId")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("Created")
                        .HasColumnType("TEXT");

                    b.Property<int>("Starea")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CerereId");

                    b.ToTable("Stari");
                });

            modelBuilder.Entity("SIGL_Cadastru.Repo.Models.Cerere", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Adaos")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ExecutantId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nr")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NrCadastral")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ResponsabilId")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("ValabilDeLa")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("ValabilPanaLa")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("ExecutantId");

                    b.HasIndex("Nr")
                        .IsUnique();

                    b.HasIndex("ResponsabilId");

                    b.ToTable("Cereri");
                });

            modelBuilder.Entity("SIGL_Cadastru.Repo.Models.Lucrare", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CerereId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Pret")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TipLucrare")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CerereId");

                    b.ToTable("Lucrari");
                });

            modelBuilder.Entity("SIGL_Cadastru.Repo.Models.Persoana", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("DataNasterii")
                        .HasColumnType("TEXT");

                    b.Property<string>("Domiciliu")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("IDNP")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Prenume")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("Rol")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Telefon")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Persoane");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c5879fa5-ec06-4ba9-8da2-393ea522f4cd"),
                            DataNasterii = new DateOnly(1977, 7, 16),
                            Domiciliu = "sat. Gribova",
                            Email = "geoproiectgrup@mail.ru",
                            IDNP = "124353452341",
                            Nume = "Balan",
                            Prenume = "Octavian",
                            Rol = 2,
                            Telefon = "079900218"
                        },
                        new
                        {
                            Id = new Guid("80bf23ed-90e7-4673-bc04-6235fc857481"),
                            DataNasterii = new DateOnly(2002, 8, 13),
                            Domiciliu = "or. Drochia",
                            Email = "",
                            IDNP = "2002500081628",
                            Nume = "Balan",
                            Prenume = "Veniamin",
                            Rol = 0,
                            Telefon = "079900846"
                        });
                });

            modelBuilder.Entity("Models.CerereStatus", b =>
                {
                    b.HasOne("SIGL_Cadastru.Repo.Models.Cerere", "Cerere")
                        .WithMany("StatusList")
                        .HasForeignKey("CerereId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cerere");
                });

            modelBuilder.Entity("SIGL_Cadastru.Repo.Models.Cerere", b =>
                {
                    b.HasOne("SIGL_Cadastru.Repo.Models.Persoana", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SIGL_Cadastru.Repo.Models.Persoana", "Executant")
                        .WithMany()
                        .HasForeignKey("ExecutantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SIGL_Cadastru.Repo.Models.Persoana", "Responsabil")
                        .WithMany()
                        .HasForeignKey("ResponsabilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Executant");

                    b.Navigation("Responsabil");
                });

            modelBuilder.Entity("SIGL_Cadastru.Repo.Models.Lucrare", b =>
                {
                    b.HasOne("SIGL_Cadastru.Repo.Models.Cerere", "Cerere")
                        .WithMany("Lucrari")
                        .HasForeignKey("CerereId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cerere");
                });

            modelBuilder.Entity("SIGL_Cadastru.Repo.Models.Cerere", b =>
                {
                    b.Navigation("Lucrari");

                    b.Navigation("StatusList");
                });
#pragma warning restore 612, 618
        }
    }
}
